name: com.dynatrace.extension.sql-oracle
version: <%=version%>
minDynatraceVersion: "1.257"
author:
  name: Dynatrace

dashboards:
  - path: "dashboards/dashboard.json"

alerts:
  - path: "alerts/alert_buffer_cache_hit_rate.json"
  - path: "alerts/alert_library_cache_hit_rate.json"
  - path: "alerts/alert_session_usage.json"
  - path: "alerts/alert_sorts_in_memory.json"
  - path: "alerts/alert_tablespace_used_memory.json"
  - path: "alerts/alert_asm_low_space.json"

metrics:
  - key: func:com.dynatrace.extension.sql-oracle.cpu.background
    query:
      metricSelector: '(com.dynatrace.extension.sql-oracle.cpu.backgroundTotal) / (com.dynatrace.extension.sql-oracle.cpu.cores)'
    metadata:
      displayName: Background CPU usage per core
      description: CPU usage of background processes per core
      unit: Percent
  - key: func:com.dynatrace.extension.sql-oracle.cpu.foreground
    query:
      metricSelector: '(com.dynatrace.extension.sql-oracle.cpu.foregroundTotal) / (com.dynatrace.extension.sql-oracle.cpu.cores)'
    metadata:
      displayName: Foreground CPU usage per core
      description: CPU usage of foreground processes per core
      unit: Percent
  - key: func:com.dynatrace.extension.sql-oracle.cpu.host
    query:
      metricSelector: '(com.dynatrace.extension.sql-oracle.cpu.hostTotal) / (com.dynatrace.extension.sql-oracle.cpu.cores)'
    metadata:
      displayName: Host CPU usage per core
      description: Host CPU usage per core
      unit: Percent
  - key: func:com.dynatrace.extension.sql-oracle.cpu.other
    query:
      metricSelector: '(com.dynatrace.extension.sql-oracle.cpu.host) - (com.dynatrace.extension.sql-oracle.cpu.foreground) - (com.dynatrace.extension.sql-oracle.cpu.background)'
    metadata:
      displayName: Foreground CPU usage per core
      description: CPU usage of other processes (foreground and background excluded) per core
      unit: Percent
  - key: func:com.dynatrace.extension.sql-oracle.memory.pga.usedForWorkAreas
    query:
      metricSelector: '(100) * (com.dynatrace.extension.sql-oracle.memory.pga.used) / (com.dynatrace.extension.sql-oracle.memory.pga.allocated)'
    metadata:
      displayName: PGA used for work areas
      description: Indicates what amount of allocated PGA memory is currently consumed by work areas. It can be used to determine how much memory is consumed by other consumers of the PGA memory (for example, PL/SQL or Java)
      unit: Percent
  - key: func:com.dynatrace.extension.sql-oracle.memory.bufferCacheHitRatio
    query:
      metricSelector: '(100) * ((com.dynatrace.extension.sql-oracle.memory.sessionLogicalReads.count) - ((com.dynatrace.extension.sql-oracle.memory.physicalReads.count) - (com.dynatrace.extension.sql-oracle.memory.physicalReadsDirect.count))) / (com.dynatrace.extension.sql-oracle.memory.sessionLogicalReads.count)'
    metadata:
      displayName: Buffer cache hit ratio
      description: Represents the data block buffer cache efficiency, as the rate of the data blocks needed in memory
      unit: Percent
  - key: func:com.dynatrace.extension.sql-oracle.memory.sortsInMemory
    query:
      metricSelector: '(100) * (com.dynatrace.extension.sql-oracle.memory.memorySorts.count) / ((com.dynatrace.extension.sql-oracle.memory.memorySorts.count) + (com.dynatrace.extension.sql-oracle.memory.diskSorts.count))'
    metadata:
      displayName: Sorts in memory ratio
      description: Sorts (from ORDER BY clauses or index building) done in-memory
      unit: Percent
  - key: func:com.dynatrace.extension.sql-oracle.queries.other
    query:
      metricSelector: '(com.dynatrace.extension.sql-oracle.queries.dbTime.count) - (com.dynatrace.extension.sql-oracle.queries.plSqlExec.count) - (com.dynatrace.extension.sql-oracle.queries.sqlExec.count) - (com.dynatrace.extension.sql-oracle.queries.sqlParse.count)'
    metadata:
      displayName: Time spent on other activities
      description: Time spent on performing activites other than interpreting PL/SQL, parsing and executing SQL
      unit: MicroSecond
  - key: func:com.dynatrace.extension.sql-oracle.tablespaces.usedSpace
    query:
      metricSelector: '(com.dynatrace.extension.sql-oracle.tablespaces.totalSpace) - (com.dynatrace.extension.sql-oracle.tablespaces.freeSpace)'
    metadata:
      displayName: Used space
      description: Total amount of space used by tablespace
      unit: Byte
  - key: func:com.dynatrace.extension.sql-oracle.tablespaces.usedRatio
    query:
      metricSelector: '(100) * ((com.dynatrace.extension.sql-oracle.tablespaces.totalSpace) - (com.dynatrace.extension.sql-oracle.tablespaces.freeSpace)) / (com.dynatrace.extension.sql-oracle.tablespaces.totalSpace)'
    metadata:
      displayName: Used space ratio
      description: Space used in tablespace
      unit: Percent
  - key: func:com.dynatrace.extension.sql-oracle.memory.pga.size.targetToLimitRatio
    query:
      metricSelector: '(com.dynatrace.extension.sql-oracle.memory.pga.size.pgaAggregateTarget) / (com.dynatrace.extension.sql-oracle.memory.pga.size.pgaAggregateLimit) * (100)'
    metadata:
      displayName: Target to limit ratio
      description: PGA target to limit ratio
      unit: Percent
  - key: func:com.dynatrace.extension.sql-oracle.sessions.totalSessionsToLimitRatio
    query:
      metricSelector: '(com.dynatrace.extension.sql-oracle.sessions.all) / (com.dynatrace.extension.sql-oracle.limits.sessions) * (100)'
    metadata:
      displayName: Sessions to limit ratio
      description: Total sessions count to limit ratio(initialization parameter)
      unit: Percent
  - key: com.dynatrace.extension.sql-oracle.cpu.cores
    metadata:
      displayName: CPU cores
      description: Number of CPU cores
      unit: Unspecified
  - key: com.dynatrace.extension.sql-oracle.cpu.backgroundTotal
    metadata:
      displayName: Background CPU
      description: Total background CPU usage
      unit: Percent
  - key: com.dynatrace.extension.sql-oracle.cpu.foregroundTotal
    metadata:
      displayName: Foreground CPU
      description: Total foreground CPU usage
      unit: Percent
  - key: com.dynatrace.extension.sql-oracle.cpu.hostTotal
    metadata:
      displayName: Host CPU usage
      description: Total host CPU usage
      unit: Percent
  - key: com.dynatrace.extension.sql-oracle.io.bytesRead.count
    metadata:
      displayName: Physical read bytes
      description: Total size in bytes of disk reads by all database instance activity including application reads, backup, recovery, and other utilities
      unit: Byte
  - key: com.dynatrace.extension.sql-oracle.io.bytesWritten.count
    metadata:
      displayName: Physical byte written
      description: Total size in bytes of all disk writes for the database instance including application activity, backup, recovery, and other utilities
      unit: Byte
  - key: com.dynatrace.extension.sql-oracle.io.wait.count
    metadata:
      displayName: Total wait time
      description: Total time spent in all wait states except for Idle class
      unit: MilliSecond
  - key: com.dynatrace.extension.sql-oracle.memory.pga.size.pgaAggregateLimit
    metadata:
      displayName: PGA aggregate limit
      description: Limit on the aggregate PGA memory consumed by the instance
      unit: Byte
  - key: com.dynatrace.extension.sql-oracle.memory.pga.size.pgaAggregateTarget
    metadata:
      displayName: PGA aggregate target
      description: Target aggregate PGA memory available to all server processes attached to the instance
      unit: Byte
  - key: com.dynatrace.extension.sql-oracle.memory.pga.used
    metadata:
      displayName: PGA memory used
      description: PGA memory consumed by work areas
      unit: Byte
  - key: com.dynatrace.extension.sql-oracle.memory.pga.allocated
    metadata:
      displayName: Allocated PGA
      description: Current amount of PGA memory allocated by the instance
      unit: Byte
  - key: com.dynatrace.extension.sql-oracle.memory.sga.cacheBuffer.sharedPoolFree
    metadata:
      displayName: Shared pool free
      description: Amount of free system global area (SGA) memory available in shared pool
      unit: Percent
  - key: com.dynatrace.extension.sql-oracle.memory.sga.redoBuffer.redoLogSpaceWaitTime.count
    metadata:
      displayName: Redo log space wait time
      description: Total elapsed time of waiting for redo log space request
      unit: MilliSecond
  - key: com.dynatrace.extension.sql-oracle.memory.sga.redoBuffer.redoSizeIncrease.count
    metadata:
      displayName: Redo size increase
      description: Total amount of redo generated in bytes
      unit: Byte
  - key: com.dynatrace.extension.sql-oracle.memory.sga.redoBuffer.redoWriteTime.count
    metadata:
      displayName: Redo write time
      description: Total elapsed time of the write from the redo log buffer to the current redo log file
      unit: MilliSecond
  - key: com.dynatrace.extension.sql-oracle.memory.sessionLogicalReads.count
    metadata:
      displayName: Logical reads
      description: The sum of "db block gets" plus "consistent gets"
      unit: Unspecified
  - key: com.dynatrace.extension.sql-oracle.memory.physicalReads.count
    metadata:
      displayName: Physical reads
      description: Total number of data blocks read from disk
      unit: Unspecified
  - key: com.dynatrace.extension.sql-oracle.memory.physicalReadsDirect.count
    metadata:
      displayName: Physical reads direct
      description: Number of reads directly from disk, bypassing the buffer cache
      unit: Unspecified
  - key: com.dynatrace.extension.sql-oracle.memory.memorySorts.count
    metadata:
      displayName: Sorts in memory
      description: Number of sort operations that were performed completely in memory and did not require any disk writes
      unit: Unspecified
  - key: com.dynatrace.extension.sql-oracle.memory.diskSorts.count
    metadata:
      displayName: Sorts on disk
      description: Number of sort operations that required at least one disk write
      unit: Unspecified
  - key: com.dynatrace.extension.sql-oracle.memory.libraryCacheHitRatio
    metadata:
      displayName: Library cache hit ratio
      description: Library cache hit ratio
      unit: Percent
  - key: com.dynatrace.extension.sql-oracle.queries.connectionManagement.count
    metadata:
      displayName: Connection management time
      description: Time spent on performing session connect and disconnect calls
      unit: MicroSecond
  - key: com.dynatrace.extension.sql-oracle.queries.plSqlExec.count
    metadata:
      displayName: PL SQL exec time
      description: Time spent on running the PL/SQL interpreter
      unit: MicroSecond
  - key: com.dynatrace.extension.sql-oracle.queries.sqlExec.count
    metadata:
      displayName: SQL exec time
      description: Time spent on executing SQL
      unit: MicroSecond
  - key: com.dynatrace.extension.sql-oracle.queries.sqlParse.count
    metadata:
      displayName: SQL parse time
      description: Time spent on parsing SQL
      unit: MicroSecond
  - key: com.dynatrace.extension.sql-oracle.queries.dbTime.count
    metadata:
      displayName: DB Time
      description: Time spent on performing Database user-level calls
      unit: MicroSecond
  - key: com.dynatrace.extension.sql-oracle.queries.cpuTime.count
    metadata:
      displayName: DB CPU
      description: CPU time spent on performing database user-level calls
      unit: MicroSecond
  - key: com.dynatrace.extension.sql-oracle.sessions.active
    metadata:
      displayName: Active Sessions
      description: Active sessions count
      unit: Unspecified
  - key: com.dynatrace.extension.sql-oracle.sessions.all
    metadata:
      displayName: Total sessions
      description: Total sessions count
      unit: Unspecified
  - key: com.dynatrace.extension.sql-oracle.sessions.userCalls.count
    metadata:
      displayName: User calls
      description: Total number of logins, parses, or execute calls
      unit: Unspecified
  - key: com.dynatrace.extension.sql-oracle.limits.sessions
    metadata:
      displayName: Sessions limit
      description: Sessions initialization parameter limit
      unit: Unspecified
  - key: com.dynatrace.extension.sql-oracle.limits.processes
    metadata:
      displayName: Processes limit
      description: Processes initialization parameter limit
      unit: Unspecified
  - key: com.dynatrace.extension.sql-oracle.wait.count.count
    metadata:
      displayName: Number of wait events
      description: Total number of waits for the event
      unit: Unspecified
  - key: com.dynatrace.extension.sql-oracle.wait.time.count
    metadata:
      displayName: Seconds waited
      description: Total amount of time waited for the event
      unit: MicroSecond
  - key: com.dynatrace.extension.sql-oracle.tablespaces.totalSpace
    metadata:
      displayName: Total space
      description: Total size of tablespace
      unit: Byte
  - key: com.dynatrace.extension.sql-oracle.tablespaces.freeSpace
    metadata:
      displayName: Free space
      description: Free space in tablespace
      unit: Byte
  - key: com.dynatrace.extension.sql-oracle.tablespaces.totalSpaceUsed
    metadata:
      displayName: Total space used
      description: Total space used in tablespace
      unit: Byte
  - key: com.dynatrace.extension.sql-oracle.tablespaces.usedSpaceRatio
    metadata:
      displayName: Used space ratio
      description: Used space ratio
      unit: Percent
  - key: com.dynatrace.extension.sql-oracle.asm.free_mb
    metadata:
      displayName: ASM - Free space
      description: Free disk space available on this Oracle ASM Disk
      unit: MegaByte
  - key: com.dynatrace.extension.sql-oracle.asm.total_mb
    metadata:
      displayName: ASM - Total space
      description: Total disk space available on this Oracle ASM Disk
      unit: MegaByte
  - key: com.dynatrace.extension.sql-oracle.asm.used_pct
    metadata:
      displayName: ASM - Used space
      description: Percentage of disk space used on this Oracle ASM Disk
      unit: Percent
  - key: com.dynatrace.extension.sql-oracle.asm.reads
    metadata:
      displayName: ASM - Reads
      description: Number of reads from this Oracle ASM Disk
      unit: Count
  - key: com.dynatrace.extension.sql-oracle.asm.writes
    metadata:
      displayName: ASM - Writes
      description: Number of writes to this Oracle ASM Disk
      unit: Count

sqlOracle:
  - group: Number of CPU cores
    featureSet: cpu
    query:
      SELECT value AS cpu_count
      FROM v$parameter
      WHERE name = 'cpu_count'
    metrics:
      - key: com.dynatrace.extension.sql-oracle.cpu.cores
        value: col:cpu_count
        type: gauge
  - group: CPU usage
    featureSet: cpu
    query: >
      SELECT
             DECODE(metric_name, 'Background CPU Usage Per Sec',
                 v$metric.value) AS background_cpu_usage,
             DECODE(metric_name, 'CPU Usage Per Sec',
                    v$metric.value) AS foreground_cpu_usage,
             DECODE(metric_name, 'Host CPU Usage Per Sec',
                    v$metric.value) AS host_cpu_usage
      FROM v$metric,
           v$metricgroup
      WHERE v$metric.group_id = v$metricgroup.group_id
        AND v$metric.metric_name IN ('Background CPU Usage Per Sec',
                                     'CPU Usage Per Sec', 'Host CPU Usage Per Sec')
    metrics:
      - key: com.dynatrace.extension.sql-oracle.cpu.backgroundTotal
        value: col:background_cpu_usage
        type: gauge
      - key: com.dynatrace.extension.sql-oracle.cpu.foregroundTotal
        value: col:foreground_cpu_usage
        type: gauge
      - key: com.dynatrace.extension.sql-oracle.cpu.hostTotal
        value: col:host_cpu_usage
        type: gauge
  - group: Physical read bytes
    featureSet: io
    query: >
      SELECT
             DECODE(name, 'physical read total bytes', value) AS bytes_written,
             DECODE(name, 'physical write total bytes', value) AS bytes_read
      FROM v$sysstat
      WHERE name IN ('physical read total bytes', 'physical write total bytes')
    metrics:
      - key: com.dynatrace.extension.sql-oracle.io.bytesRead
        value: col:bytes_read
        type: count
      - key: com.dynatrace.extension.sql-oracle.io.bytesWritten
        value: col:bytes_written
        type: count
  - group: Total wait time
    featureSet: io
    query: >
      SELECT SUM(time_waited) * 10 AS totalWaitTime
      FROM v$system_wait_class
      WHERE wait_class <> 'Idle'
    metrics:
      - key: com.dynatrace.extension.sql-oracle.io.wait
        value: col:totalWaitTime
        type: count
  - group: PGA
    featureSet: memory
    query: >
      SELECT
             DECODE(name, 'pga_aggregate_limit', value) AS pga_aggregate_limit,
             DECODE(name, 'pga_aggregate_target', value) AS pga_aggregate_target
      FROM v$parameter
      WHERE name IN ('pga_aggregate_limit', 'pga_aggregate_target')
    metrics:
      - key: com.dynatrace.extension.sql-oracle.memory.pga.size.pgaAggregateLimit
        value: col:pga_aggregate_limit
        type: gauge
      - key: com.dynatrace.extension.sql-oracle.memory.pga.size.pgaAggregateTarget
        value: col:pga_aggregate_target
        type: gauge
  - group: Total PGA in Use
    featureSet: memory
    query: >
      SELECT
             DECODE(name,'total PGA inuse', value) AS total_pga_in_use,
             DECODE(name,'total PGA allocated', value) AS total_pga_allocated
      FROM v$pgastat
      WHERE name IN ('total PGA inuse', 'total PGA allocated')
    metrics:
      - key: com.dynatrace.extension.sql-oracle.memory.pga.used
        value: col:total_pga_in_use
        type: gauge
      - key: com.dynatrace.extension.sql-oracle.memory.pga.allocated
        value: col:total_pga_allocated
        type: gauge
  - group: Shared Pool Free
    featureSet: memory
    query: >
      SELECT SUM(DECODE(name, 'free memory', bytes)) / SUM(bytes) * 100 AS shared_pool_free FROM v$sgastat WHERE pool = 'shared pool'
    metrics:
      - key: com.dynatrace.extension.sql-oracle.memory.sga.cacheBuffer.sharedPoolFree
        value: col:shared_pool_free
        type: gauge
  - group: Redo
    featureSet: memory
    query: >
      SELECT
             DECODE(name, 'redo log space wait time', value) * 10 AS redo_log_space_wait_time,
             DECODE(name, 'redo size', value)                AS redo_size,
             DECODE(name, 'redo write time', value) * 10     AS redo_write_time,
             DECODE(name, 'session logical reads', value)    AS session_logical_reads,
             DECODE(name, 'physical reads', value)           AS physical_reads,
             DECODE(name, 'physical reads direct', value)    AS physical_reads_direct,
             DECODE(name, 'sorts (memory)', value)           AS memory_sorts,
             DECODE(name, 'sorts (disk)', value)             AS disk_sorts
      FROM v$sysstat
      WHERE name IN ('redo log space wait time', 'redo size', 'redo write time',
                     'session logical reads', 'physical reads', 'physical reads direct',
                     'sorts (memory)', 'sorts (disk)')
    metrics:
      - key: com.dynatrace.extension.sql-oracle.memory.sga.redoBuffer.redoLogSpaceWaitTime
        value: col:redo_log_space_wait_time
        type: count
      - key: com.dynatrace.extension.sql-oracle.memory.sga.redoBuffer.redoSizeIncrease
        value: col:redo_size
        type: count
      - key: com.dynatrace.extension.sql-oracle.memory.sga.redoBuffer.redoWriteTime
        value: col:redo_write_time
        type: count
      - key: com.dynatrace.extension.sql-oracle.memory.sessionLogicalReads
        value: col:session_logical_reads
        type: count
      - key: com.dynatrace.extension.sql-oracle.memory.physicalReads
        value: col:physical_reads
        type: count
      - key: com.dynatrace.extension.sql-oracle.memory.physicalReadsDirect
        value: col:physical_reads_direct
        type: count
      - key: com.dynatrace.extension.sql-oracle.memory.memorySorts
        value: col:memory_sorts
        type: count
      - key: com.dynatrace.extension.sql-oracle.memory.diskSorts
        value: col:disk_sorts
        type: count
  - group: Library Cache Hit Ratio
    featureSet: memory
    query: >
      SELECT
            ROUND(1 - SUM(RELOADS) / SUM(PINS), 4) * 100 AS cache_hit_ratio
      FROM V$LIBRARYCACHE
    metrics:
      - key: com.dynatrace.extension.sql-oracle.memory.libraryCacheHitRatio
        value: col:cache_hit_ratio
        type: gauge
  - group: Query performance
    featureSet: queryPerformance
    query: >
      SELECT
             DECODE(stat_name, 'connection management call elapsed time', value) AS conn_management_call_time,
             DECODE(stat_name, 'PL/SQL execution elapsed time', value)           AS pl_sql_execution_elapsed_time,
             DECODE(stat_name, 'sql execute elapsed time', value)                AS sql_execute_elapsed_time,
             DECODE(stat_name, 'parse time elapsed', value)                      AS parse_time_elapsed,
             DECODE(stat_name, 'DB time', value)                                 AS db_time,
             DECODE(stat_name, 'DB CPU', value)                                 AS cpu_time
      FROM v$sys_time_model
      WHERE stat_name IN ('connection management call elapsed time',
                          'PL/SQL execution elapsed time', 'sql execute elapsed time',
                          'parse time elapsed', 'DB time', 'DB CPU')
    metrics:
      - key: com.dynatrace.extension.sql-oracle.queries.connectionManagement
        value: col:conn_management_call_time
        type: count
      - key: com.dynatrace.extension.sql-oracle.queries.plSqlExec
        value: col:pl_sql_execution_elapsed_time
        type: count
      - key: com.dynatrace.extension.sql-oracle.queries.sqlExec
        value: col:sql_execute_elapsed_time
        type: count
      - key: com.dynatrace.extension.sql-oracle.queries.sqlParse
        value: col:parse_time_elapsed
        type: count
      - key: com.dynatrace.extension.sql-oracle.queries.dbTime
        value: col:db_time
        type: count
      - key: com.dynatrace.extension.sql-oracle.queries.cpuTime
        value: col:cpu_time
        type: count
  - group: Sessions
    featureSet: sessions
    query: >
      SELECT SUM(CASE
                     WHEN status = 'ACTIVE' AND wait_class <> 'Idle'
                         THEN 1
                     ELSE 0 END) AS active_sessions,
             COUNT(*)            AS all_sessions
      FROM v$session
    metrics:
      - key: com.dynatrace.extension.sql-oracle.sessions.active
        value: col:active_sessions
        type: gauge
      - key: com.dynatrace.extension.sql-oracle.sessions.all
        value: col:all_sessions
        type: gauge
  - group: User calls count
    featureSet: sessions
    query: >
      SELECT value AS user_calls FROM v$sysstat WHERE name = 'user calls'
    metrics:
      - key: com.dynatrace.extension.sql-oracle.sessions.userCalls
        value: col:user_calls
        type: count
  - group: Limits
    featureSet: limits
    query: >
      SELECT
              DECODE(name, 'sessions', value) AS sessions_limit,
              DECODE(name, 'processes', value) AS processes_limit
      FROM v$parameter 
      WHERE name IN('sessions', 'processes')
    metrics:
      - key: com.dynatrace.extension.sql-oracle.limits.sessions
        value: col:sessions_limit
        type: gauge
      - key: com.dynatrace.extension.sql-oracle.limits.processes
        value: col:processes_limit
        type: gauge
  - group: Wait Events
    featureSet: waitEvents
    query: >
      SELECT total_waits, time_waited_micro, event, wait_class
      FROM v$system_event
    metrics:
      - key: com.dynatrace.extension.sql-oracle.wait.count
        value: col:total_waits
        type: count
      - key: com.dynatrace.extension.sql-oracle.wait.time
        value: col:time_waited_micro
        type: count
    dimensions:
      - key: event
        value: col:event
      - key: wait_class
        value: col:wait_class
  - group: Tablespaces
    featureSet: tablespaces
    query: >
      WITH getsize AS (
          SELECT tablespace_name,
                 max(autoextensible) autoextensible,
                 SUM(bytes)          tsize
          FROM dba_data_files
          GROUP BY tablespace_name),
           getfree AS (
               SELECT tablespace_name,
                      contents,
                      SUM(blocks * block_size) tfree
               FROM DBA_LMT_FREE_SPACE a,
                    v$tablespace b,
                    dba_tablespaces c
               WHERE a.TABLESPACE_ID = b.ts#
                 AND b.name = c.tablespace_name
               GROUP BY tablespace_name, contents)
      SELECT a.tablespace_name,
             b.contents,
             a.tsize,
             b.tfree,
             a.tsize - b.tfree AS tused,
             100 * ((a.tsize - b.tfree) / a.tsize) AS tused_ratio,
             a.autoextensible AS autoextend
      FROM getsize a,
           getfree b
      WHERE a.tablespace_name = b.tablespace_name
      UNION
      SELECT tablespace_name,
             'TEMPORARY',
             SUM(tablespace_size) AS tsize,
             SUM(free_space) AS tfree,
             SUM(tablespace_size) - SUM(free_space) AS tused,
             100 * ((SUM(tablespace_size) - SUM(free_space)) / SUM(tablespace_size)) AS tused_ratio,
             'NO'
      FROM dba_temp_free_space
      GROUP BY tablespace_name
    metrics:
      - key: com.dynatrace.extension.sql-oracle.tablespaces.totalSpace
        value: col:tsize
        type: gauge
      - key: com.dynatrace.extension.sql-oracle.tablespaces.freeSpace
        value: col:tfree
        type: gauge
      - key: com.dynatrace.extension.sql-oracle.tablespaces.totalSpaceUsed
        value: col:tused
        type: gauge
      - key: com.dynatrace.extension.sql-oracle.tablespaces.usedSpaceRatio
        value: col:tused_ratio
        type: gauge
    dimensions:
      - key: tablespace
        value: col:tablespace_name
  - group: ASM
    featureSet: asm
    query: >
      SELECT NAME,
        free_mb,
        total_mb,
        100 - (free_mb / total_mb * 100) AS used_pct,
        reads,
        writes
      FROM V$ASM_DISK_STAT
    metrics:
      - key: com.dynatrace.extension.sql-oracle.asm.free_mb
        value: col:free_mb
        type: gauge
      - key: com.dynatrace.extension.sql-oracle.asm.total_mb
        value: col:total_mb
        type: gauge
      - key: com.dynatrace.extension.sql-oracle.asm.used_pct
        value: col:used_pct
        type: gauge
      - key: com.dynatrace.extension.sql-oracle.asm.reads
        value: col:reads
        type: count
      - key: com.dynatrace.extension.sql-oracle.asm.writes
        value: col:writes
        type: count
    dimensions:
      - key: name
        value: col:name
  - group: topN Queries
    featureSet: TopN
    ingest: log
    query: >
      SELECT sqlarea.sql_id,
             sqlarea.elapsed_time,
             sqlarea.cpu_time,
             sqlarea.sql_fulltext,
             sqlarea.parsing_schema_name,
             sqlarea.disk_reads,
             sqlarea.direct_writes,
             sqlarea.executions,
             sqlarea.parse_calls,
             sqlarea.buffer_gets,
             sqlarea.rows_processed,
             sqlarea.user_io_wait_time,
             sqlarea.cluster_wait_time,
             sqlarea.concurrency_wait_time,
             sqlarea.application_wait_time
      FROM v$sqlarea sqlarea
               JOIN (SELECT sql_id, current_con_id
                     FROM (SELECT area.sql_id, current_con_id
                           FROM v$sqlarea area
                                    JOIN (SELECT SYS_CONTEXT('USERENV', 'CON_ID') as current_con_id from DUAL)
                                         ON area.con_id = current_con_id
                           WHERE (area.last_active_time >= (SYSDATE - NUMTODSINTERVAL(300, 'SECOND'))
                               OR (area.last_active_time IS NULL
                                   AND area.last_load_time >= (SYSDATE - NUMTODSINTERVAL(300, 'SECOND'))))
                           ORDER BY elapsed_time DESC)
                     WHERE rownum <= 100) sqlarea_int
                    ON sqlarea.sql_id = sqlarea_int.sql_id AND sqlarea.con_id = current_con_id
    attributes:
      - key: schema
        value: col:PARSING_SCHEMA_NAME
      - key: sql_id
        value: col:SQL_ID
      - key: content
        value: col:sql_fulltext
      - key: event.group
        value: const:query_performance
      - key: cpu_time
        value: col:cpu_time
        type: rate
      - key: disk_reads
        value: col:disk_reads
        type: rate
      - key: buffer_gets
        value: col:buffer_gets
        type: rate
      - key: user_io_wait_time
        value: col:user_io_wait_time
        type: rate
      - key: cluster_wait_time
        value: col:cluster_wait_time
        type: rate
      - key: concurrency_wait_time
        value: col:concurrency_wait_time
        type: rate
      - key: application_wait_time
        value: col:application_wait_time
        type: rate
      - key: executions
        value: col:executions
        type: rate
      - key: direct_writes
        value: col:direct_writes
        type: rate
      - key: rows_processed
        value: col:rows_processed
        type: rate
      - key: parse_calls
        value: col:parse_calls
        type: rate

topology:
  types:
    - name: sql:com_dynatrace_extension_sql-oracle_host
      displayName: Oracle DB host
      enabled: true
      rules:
        - idPattern: sql_sql-oracle_{device.address}
          sources:
            - sourceType: Metrics
              condition: $prefix(com.dynatrace.extension.sql-oracle)
            - sourceType: Logs
          attributes:
            - pattern: '{device.address}'
              key: address
            - pattern: '{device.name}'
              key: hostname
          requiredDimensions: []
          instanceNamePattern: Oracle DB server on {device.address}
    - name: sql:com_dynatrace_extension_sql-oracle_instance
      displayName: Oracle DB
      enabled: true
      rules:
        - idPattern: sql_sql-oracle_{device.address}_{device}
          sources:
            - sourceType: Metrics
              condition: $prefix(com.dynatrace.extension.sql-oracle)
            - sourceType: Logs
          attributes:
            - pattern: '{device}'
              key: device
            - pattern: '{device.address}'
              key: address
            - pattern: '{device.name}'
              key: hostname
            - pattern: '{device.port}'
              key: port
          requiredDimensions: []
          instanceNamePattern: 'Oracle DB: {device} on {device.address}'
          iconPattern: oracle
        - idPattern: sql_sql-oracle_{device}_{device}
          sources:
            - sourceType: Metrics
              condition: $prefix(com.dynatrace.extension.sql-oracle)
            - sourceType: Logs
          attributes:
            - pattern: '{device}'
              key: device
            - pattern: '{device.name}'
              key: hostname
            - pattern: '{device.port}'
              key: port
          requiredDimensions: []
          instanceNamePattern: 'Oracle DB: {device}'
          iconPattern: oracle
    - name: sql:com_dynatrace_extension_sql-oracle_asm_disk
      displayName: Oracle ASM Disk
      enabled: true
      rules:
        - idPattern: sql_sql-oracle_asm_disk_{device.address}_{device}_{name}
          sources:
            - sourceType: Metrics
              condition: $prefix(com.dynatrace.extension.sql-oracle.asm.)
            - sourceType: Logs
          attributes:
            - pattern: '{device}'
              key: device
            - pattern: '{device.address}'
              key: address
            - pattern: '{device.name}'
              key: hostname
            - pattern: '{device.port}'
              key: port
            - pattern: '{name}'
              key: disk_name
          requiredDimensions: []
          instanceNamePattern: 'Oracle ASM Disk: {name} on {device.address}'
          iconPattern: hdd-discdrive
  relationships:
    - typeOfRelation: CHILD_OF
      fromType: sql:com_dynatrace_extension_sql-oracle_instance
      toType: sql:com_dynatrace_extension_sql-oracle_host
      enabled: true
      sources:
        - sourceType: Metrics
          condition: $prefix(com.dynatrace.extension.sql-oracle)
        - sourceType: Logs
    - typeOfRelation: RUNS_ON
      fromType: sql:com_dynatrace_extension_sql-oracle_host
      toType: host
      enabled: true
      sources:
        - sourceType: Metrics
          condition: $prefix(com.dynatrace.extension.sql-oracle)
        - sourceType: Logs
    - typeOfRelation: RUNS_ON
      fromType: sql:com_dynatrace_extension_sql-oracle_instance
      toType: sql:com_dynatrace_extension_sql-oracle_host
      enabled: true
      sources:
        - sourceType: Metrics
          condition: $prefix(com.dynatrace.extension.sql-oracle)
        - sourceType: Logs
    - typeOfRelation: CHILD_OF
      fromType: sql:com_dynatrace_extension_sql-oracle_asm_disk
      toType: sql:com_dynatrace_extension_sql-oracle_host
      enabled: true
      sources:
        - sourceType: Metrics
          condition: $prefix(com.dynatrace.extension.sql-oracle.asm.)
        - sourceType: Logs

screens:
  - entityType: sql:com_dynatrace_extension_sql-oracle_host
    propertiesCard:
      properties:
        - type: RELATION
          relation:
            entitySelectorTemplate: type(host), toRelationships.runsOn($(entityConditions))
            displayName: Host
    detailsSettings:
      staticContent:
        showProblems: true
        showProperties: true
        showTags: true
        showGlobalFilter: true
        showAddTag: true
      layout:
        autoGenerate: false
        cards:
          - type: "ENTITIES_LIST"
            key: "instance"
          - type: "CHART_GROUP"
            key: "instance_cpu"
          - type: "CHART_GROUP"
            key: "instance_memory"
          - type: "CHART_GROUP"
            key: "instance_query_performance"
          - type: "CHART_GROUP"
            key: "instance_io"
          - type: "CHART_GROUP"
            key: "instance_sessions"
          - type: "CHART_GROUP"
            key: "instance_tablespace"
          - type: LOGS
            key: default
            width: FULL_SIZE
            conditions: []
    logsCards:
      - displayName: Most time consuming Oracle statements
        enablePaging: true
        filterQuery: dt.source_entity inEntitySelector "$(entityConditions)"
        key: default
        pageSize: 10
        showFiltering: true
    entitiesListCards:
      - key: "instance"
        displayName: "Instances"
        entitySelectorTemplate: "type(sql:com_dynatrace_extension_sql-oracle_instance), fromRelationships.isChildOf($(entityConditions))"
        pageSize: 5
        displayCharts: false
        displayIcons: true
        enableDetailsExpandability: true
        numberOfVisibleCharts: 1
    chartsCards:
      - key: "instance_cpu"
        displayName: "CPU Monitoring"
        numberOfVisibleCharts: 2
        charts:
          - displayName: "Background CPU usage per core"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: func:com.dynatrace.extension.sql-oracle.cpu.background:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_host"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "Foreground CPU usage per core"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: func:com.dynatrace.extension.sql-oracle.cpu.foreground:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_host"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "Host CPU usage per core"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: func:com.dynatrace.extension.sql-oracle.cpu.host:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_host"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "CPU usage of other processes"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: func:com.dynatrace.extension.sql-oracle.cpu.other:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_host"):avg:auto:sort(value(sum,descending)):limit(10)
      - key: "instance_cpu"
        displayName: "CPU Monitoring"
        numberOfVisibleCharts: 2
        charts:
          - displayName: "Background CPU usage per core"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: func:com.dynatrace.extension.sql-oracle.cpu.background:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_host"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "Foreground CPU usage per core"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: func:com.dynatrace.extension.sql-oracle.cpu.foreground:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_host"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "Host CPU usage per core"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: func:com.dynatrace.extension.sql-oracle.cpu.host:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_host"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "CPU usage of other processes"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: func:com.dynatrace.extension.sql-oracle.cpu.other:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_host"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "Number of CPU cores"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.cpu.cores:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_host"):avg:auto:sort(value(sum,descending)):limit(10)
      - key: "instance_memory"
        displayName: "Memory usage overview"
        numberOfVisibleCharts: 4
        charts:
          - displayName: "Target to Limit Ratio"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: func:com.dynatrace.extension.sql-oracle.memory.pga.size.targetToLimitRatio:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_host"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "PGA used for work areas"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: func:com.dynatrace.extension.sql-oracle.memory.pga.usedForWorkAreas:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_host"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "Buffer cache hit ratio"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: func:com.dynatrace.extension.sql-oracle.memory.bufferCacheHitRatio:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_host"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "Sorts in memory"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: func:com.dynatrace.extension.sql-oracle.memory.sortsInMemory:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_host"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "PGA aggregate limit"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.memory.pga.size.pgaAggregateLimit:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_host"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "PGA aggregate target"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.memory.pga.size.pgaAggregateTarget:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_host"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "Allocated PGA"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.memory.pga.allocated:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_host"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "PGA memory in use"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.memory.pga.used:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_host"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "Shared pool free"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.memory.sga.cacheBuffer.sharedPoolFree:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_host"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "Redo log space wait time"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.memory.sga.redoBuffer.redoLogSpaceWaitTime.count:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_host"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "Redo size increase"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.memory.sga.redoBuffer.redoSizeIncrease.count:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_host"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "Redo write time"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.memory.sga.redoBuffer.redoWriteTime.count:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_host"):avg:auto:sort(value(sum,descending)):limit(10)
      - key: "instance_query_performance"
        displayName: "Query performance monitoring"
        numberOfVisibleCharts: 4
        charts:
          - displayName: "Connection management time"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.queries.connectionManagement.count:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_host"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "PL SQL exec time"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.queries.plSqlExec.count:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_host"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "SQL exec time"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.queries.sqlExec.count:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_host"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "SQL parse time"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.queries.sqlParse.count:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_host"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "Time spent on other activities"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: func:com.dynatrace.extension.sql-oracle.queries.other:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_host"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "DB Time"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.queries.dbTime.count:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_host"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "DB CPU"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.queries.cpuTime.count:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_host"):avg:auto:sort(value(sum,descending)):limit(10)
      - key: "instance_io"
        displayName: "IO monitoring"
        numberOfVisibleCharts: 2
        charts:
          - displayName: "Physical read bytes"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.io.bytesRead.count:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_host"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "Physical bytes written"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.io.bytesWritten.count:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_host"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "Total wait time"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.io.wait.count:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_host"):avg:auto:sort(value(sum,descending)):limit(10)
      - key: "instance_sessions"
        displayName: "Session monitoring"
        numberOfVisibleCharts: 2
        charts:
          - displayName: "Sessions"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.sessions.all:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_host"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "Active Sessions"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.sessions.active:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_host"):avg:auto:sort(value(sum,descending)):limit(10)
      - key: "instance_tablespace"
        displayName: "Tablespace monitoring"
        numberOfVisibleCharts: 2
        charts:
          - displayName: "Total space"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.tablespaces.totalSpace:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_host"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "Free space"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.tablespaces.freeSpace:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_host"):avg:auto:sort(value(sum,descending)):limit(10)
  - entityType: sql:com_dynatrace_extension_sql-oracle_instance
    listSettings:
      staticContent:
        showGlobalFilter: true
        header:
          title: "Oracle DB instances"
          description: "Overview of Oracle DB instances"
          icon: oracle
      layout:
        autoGenerate: true
    propertiesCard:
      properties:
        - type : RELATION
          relation :
            entitySelectorTemplate : type(host), toRelationships.runsOn($(entityConditions))
            displayName : Host
    detailsSettings:
      staticContent:
        showProblems: true
        showProperties: true
        showTags: true
        showGlobalFilter: true
        showAddTag: true
      layout:
        autoGenerate: false
        cards:
          - type: "CHART_GROUP"
            key: "instance_cpu"
          - type: "CHART_GROUP"
            key: "instance_memory"
          - type: "CHART_GROUP"
            key: "instance_query_performance"
          - type: "CHART_GROUP"
            key: "instance_io"
          - type: "CHART_GROUP"
            key: "instance_sessions"
          - type: "CHART_GROUP"
            key: "instance_tablespace"
          - type: LOGS
            key: default
            width: FULL_SIZE
            conditions: []
    logsCards:
      - displayName: Most time consuming Oracle statements
        enablePaging: true
        filterQuery: dt.source_entity inEntitySelector "$(entityConditions)"
        key: default
        pageSize: 10
        showFiltering: true
    chartsCards:
      - key: "instance_cpu"
        displayName: "CPU Monitoring"
        numberOfVisibleCharts: 2
        charts:
          - displayName: "Background CPU usage per core"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: func:com.dynatrace.extension.sql-oracle.cpu.background:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_instance"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "Foreground CPU usage per core"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: func:com.dynatrace.extension.sql-oracle.cpu.foreground:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_instance"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "Host CPU usage per core"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: func:com.dynatrace.extension.sql-oracle.cpu.host:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_instance"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "CPU usage of other processes"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: func:com.dynatrace.extension.sql-oracle.cpu.other:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_instance"):avg:auto:sort(value(sum,descending)):limit(10)
      - key: "instance_cpu"
        displayName: "CPU Monitoring"
        numberOfVisibleCharts: 2
        charts:
          - displayName: "Background CPU usage per core"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: func:com.dynatrace.extension.sql-oracle.cpu.background:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_instance"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "Foreground CPU usage per core"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: func:com.dynatrace.extension.sql-oracle.cpu.foreground:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_instance"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "Host CPU usage per core"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: func:com.dynatrace.extension.sql-oracle.cpu.host:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_instance"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "CPU usage of other processes"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: func:com.dynatrace.extension.sql-oracle.cpu.other:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_instance"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "Number of CPU cores"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.cpu.cores:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_instance"):avg:auto:sort(value(sum,descending)):limit(10)
      - key: "instance_memory"
        displayName: "Memory usage overview"
        numberOfVisibleCharts: 4
        charts:
          - displayName: "Target to Limit Ratio"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: func:com.dynatrace.extension.sql-oracle.memory.pga.size.targetToLimitRatio:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_instance"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "PGA used for work areas"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: func:com.dynatrace.extension.sql-oracle.memory.pga.usedForWorkAreas:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_instance"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "Buffer cache hit"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: func:com.dynatrace.extension.sql-oracle.memory.bufferCacheHitRatio:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_instance"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "Sorts in memory"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: func:com.dynatrace.extension.sql-oracle.memory.sortsInMemory:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_instance"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "PGA aggregate limit"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.memory.pga.size.pgaAggregateLimit:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_instance"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "PGA aggregate target"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.memory.pga.size.pgaAggregateTarget:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_instance"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "Allocated PGA"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.memory.pga.allocated:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_instance"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "PGA memory in use"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.memory.pga.used:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_instance"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "Shared pool free"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.memory.sga.cacheBuffer.sharedPoolFree:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_instance"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "Redo log space wait time"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.memory.sga.redoBuffer.redoLogSpaceWaitTime.count:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_instance"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "Redo size increase"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.memory.sga.redoBuffer.redoSizeIncrease.count:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_instance"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "Redo write time"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.memory.sga.redoBuffer.redoWriteTime.count:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_instance"):avg:auto:sort(value(sum,descending)):limit(10)
      - key: "instance_query_performance"
        displayName: "Query performance monitoring"
        numberOfVisibleCharts: 4
        charts:
          - displayName: "Connection management time"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.queries.connectionManagement.count:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_instance"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "PL SQL exec time"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.queries.plSqlExec.count:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_instance"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "SQL exec time"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.queries.sqlExec.count:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_instance"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "SQL parse time"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.queries.sqlParse.count:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_instance"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "Time spent on other activities"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: func:com.dynatrace.extension.sql-oracle.queries.other:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_instance"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "DB Time"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.queries.dbTime.count:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_instance"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "DB CPU"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.queries.cpuTime.count:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_instance"):avg:auto:sort(value(sum,descending)):limit(10)
      - key: "instance_io"
        displayName: "IO monitoring"
        numberOfVisibleCharts: 2
        charts:
          - displayName: "Physical read bytes"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.io.bytesRead.count:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_instance"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "Physical bytes written"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.io.bytesWritten.count:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_instance"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "Total wait time"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.io.wait.count:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_instance"):avg:auto:sort(value(sum,descending)):limit(10)
      - key: "instance_sessions"
        displayName: "Session monitoring"
        numberOfVisibleCharts: 2
        charts:
          - displayName: "Sessions"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.sessions.all:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_instance"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "Active Sessions"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.sessions.active:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_instance"):avg:auto:sort(value(sum,descending)):limit(10)
      - key: "instance_tablespace"
        displayName: "Tablespace monitoring"
        numberOfVisibleCharts: 2
        charts:
          - displayName: "Total space"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.tablespaces.totalSpace:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_instance"):avg:auto:sort(value(sum,descending)):limit(10)
          - displayName: "Free space"
            visualizationType: GRAPH_CHART
            graphChartConfig:
              metrics:
                - metricSelector: com.dynatrace.extension.sql-oracle.tablespaces.freeSpace:splitBy("dt.entity.sql:com_dynatrace_extension_sql-oracle_instance"):avg:auto:sort(value(sum,descending)):limit(10)